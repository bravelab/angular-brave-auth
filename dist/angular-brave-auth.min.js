!function(){"use strict";angular.module("app.auth",["ui.router","ngCookies","ngStorage"]).value("braveAuthVersion","0.0.19")}(),function(){"use strict";function e(){this.apiUrl="/api",this.resourceName="/auth/login/",this.usernameFieldType="email",this.usernameFieldName="username",this.logo={src:"../../../styles/img/logo.png",alt:"Angular Brave Auth",title:"Angular Brave Auth"},this.templates={views:{login:"bower_components/angular-brave-auth/src/templates/login.tpl.html"},directives:{loginInfo:"bower_components/angular-brave-auth/src/templates/login-info.tpl.html"}},this.$get=function(){var e=this.apiUrl,t=this.templates,n=this.resourceName,r=this.usernameFieldType,o=this.usernameFieldName,i=this.logo;return{getApiUrl:function(){return e},getResourceName:function(){return n},getTemplates:function(){return t},getUsernameFieldType:function(){return r},getUsernameFieldName:function(){return o},getUsernameFieldTemplate:function(){return"bower_components/angular-brave-auth/src/templates/fields/username/"+r+".html"},getLogo:function(){return i}}},this.setApiUrl=function(e){this.apiUrl=e},this.setResourceName=function(e){this.resourceName=e},this.setTemplates=function(e){this.templates=e},this.setUsernameFieldType=function(e){this.usernameFieldType=e},this.setUsernameField=function(e){console.log("angular-brave-auth: setUsernameField is deprecated, please use setUsernameFieldType to set type and setUusernameFieldName to set api field name"),this.setUsernameFieldType(e)},this.setUsernameFieldName=function(e){this.usernameFieldName=e},this.setLogo=function(e){this.logo=e}}angular.module("app.auth").provider("BraveAuthConfig",e)}(),function(){"use strict";function e(e,t){e.state("login",{url:"/login",views:{root:{templateUrl:function(){return t.templates.views.login},controller:"LoginController",controllerAs:"vm"}},data:{title:"Login",htmlId:"extr-page"},resolve:{scripts:function(e){return e.register(["build/vendor.ui.js"])}}}).state("logout",{url:"/logout",views:{root:{controller:"LogoutController"}},data:{title:"Logout",htmlId:"extr-page"},resolve:{scripts:function(e){return e.register(["build/vendor.ui.js"])}}})}angular.module("app.auth").config(e),e.$inject=["$stateProvider","BraveAuthConfigProvider"]}(),function(){"use strict";function e(e,t,n,r,o){function i(){}function a(){r.login(u.username,u.password)}var u=this;u.login=a,u.message=t.message,u.usernameFieldTemplate=o.getUsernameFieldTemplate(),u.logo=o.getLogo(),i()}angular.module("app.auth").controller("LoginController",e),e.$inject=["$location","$stateParams","$scope","AuthService","BraveAuthConfig"]}(),function(){"use strict";function e(e){e.logout()}angular.module("app.auth").controller("LogoutController",e),e.$inject=["AuthService"]}(),function(){"use strict";angular.module("app.auth").factory("braveAuthJWTHttpInterceptor",function(e){return{request:function(t){var n=angular.fromJson(e.loggedUser);return t.headers=t.headers||{},angular.isDefined(n.token)&&n.token&&(t.headers.Authorization="JWT "+n.token),t}}})}(),function(){"use strict";function e(e){return function(t){"undefined"!=typeof t.username&&(this.username=t[e.getUsernameFieldName()]),"undefined"!=typeof t.roles&&(this.roles=t.roles),"undefined"!=typeof t.token&&(this.token=t.token),"undefined"!=typeof t.userdata&&(this.userdata=t.userdata),"undefined"!=typeof t.picture&&(this.picture=t.picture)}}angular.module("app.auth").factory("UserModel",e),e.$inject=["BraveAuthConfig"]}(),function(){"use strict";function e(e,t,n){var r="login",o="error403";return{authorize:function(){return n.identity().then(function(){var i=n.isAuthenticated();e.toState.data.roles&&e.toState.data.roles.length>0&&!n.isInAnyRole(e.toState.data.roles)&&(i?t.go(o):(e.returnToState=e.toState,e.returnToStateParams=e.toStateParams,t.go(r)))})}}}angular.module("app.auth").factory("AuthAuthorizeService",e),e.$inject=["$rootScope","$state","AuthToolsService"]}(),function(){"use strict";angular.module("app.auth").factory("AuthServiceMock",["$q",function(e){var t={};return t.token="425345934423423j4rwe239uhasd91239182721987",t}])}(),function(){"use strict";function e(e,t,n,r,o,i,a,u,s){function l(e,r){function o(e){if("undefined"!=typeof e.Item&&e.Item){u.authenticate(new s(e.Item));var r=n.returnToState,o=n.returnToStateParams;r?t.go(r,o):t.go("app.home")}else l()}function l(){t.go(t.current,{message:"Invalid login or password"})}var c={};return c[a.getUsernameFieldName()]=e,c.password=r,i({method:"POST",url:a.getApiUrl()+a.getResourceName(),data:c,headers:{"Content-Type":"application/json"}}).success(o).error(l)}function c(){function n(n){e.$reset(),r.$reset(),angular.isDefined(n.logoutRedirectUrl)&&(window.location.href=n.logoutRedirectUrl),t.go("app.home")}function o(){console.error("Epic failure!")}return i({method:"POST",url:a.getApiUrl()+"/auth/logout/"}).then(n,o)}var g={login:l,logout:c};return g}angular.module("app.auth").factory("AuthService",e),e.$inject=["$sessionStorage","$state","$rootScope","$localStorage","$q","$http","BraveAuthConfig","AuthToolsService","UserModel"]}(),function(){"use strict";function e(e,t,n,r){var o=null,i=!1;return{isIdentityResolved:function(){return angular.isDefined(o)},isAuthenticated:function(){return i},isInRole:function(e){return!(!i||!o.roles)&&o.roles.indexOf(e)!==-1},isInAnyRole:function(e){if(!i||!o.roles)return!1;for(var t=0;t<e.length;t++)if(this.isInRole(e[t]))return!0;return!1},authenticate:function(e){o=e,i=null!=e,e?r.loggedUser=angular.toJson(e):r.loggedUser=null},identity:function(t){var n=e.defer();return t===!0&&(o=null),o=angular.fromJson(r.loggedUser),this.authenticate(o),n.resolve(o),n.promise}}}angular.module("app.auth").factory("AuthToolsService",e),e.$inject=["$q","$http","$timeout","$sessionStorage"]}(),function(){"use strict";function e(e,t){return{restrict:"A",templateUrl:function(){return e.getTemplates().directives.loginInfo},link:function(e,n){e.user=t}}}angular.module("app.auth").directive("loginInfo",e),e.$inject=["BraveAuthConfig","UserModel"]}();